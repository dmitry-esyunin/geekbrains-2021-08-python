# Урок 7. ООП. Продвинутый уровень
#
# 1. Реализовать класс Matrix (матрица). 
#   Обеспечить перегрузку конструктора класса (метод __init__()), 
#   который должен принимать данные (список списков) для формирования матрицы.
#   Подсказка: матрица — система некоторых математических величин, 
#   расположенных в виде прямоугольной схемы.
#   Примеры матриц вы найдете в методичке.
#   Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
#   Далее реализовать перегрузку метода __add__() для реализации операции сложения 
#   двух объектов класса Matrix (двух матриц). 
#   Результатом сложения должна быть новая матрица.
#   
#   Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент 
#   первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
# 
class Matrix:

    def __init__(self, data):
        self.data = data
        self.n = len(data)
        self.m = len(data[0])

    def __str__(self):
        return '\n'.join([line for line in ['\t'.join(map(str, self.data[i])) for i in range(self.n)]])

    def __add__(self, other):
        result = self.data
        for i in range(self.n):
            for j in range(self.m):
                result[i][j] += other.data[i][j]
        return Matrix(result)


A = Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]])
B = Matrix([[10, 20, 30], [40, 50, 60], [70, 80, 90], [100, 110, 120]])
print(A+B)
