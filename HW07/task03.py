# Урок 7. ООП. Продвинутый уровень
# 
# 3. Реализовать программу работы с органическими клетками. 
#   Необходимо создать класс Клетка. 
#   В его конструкторе инициализировать параметр, соответствующий количеству клеток (целое число). 
#   В классе должны быть реализованы методы перегрузки арифметических операторов: 
#       сложение (__add__()), 
#       вычитание (__sub__()), 
#       умножение (__mul__()), 
#       деление (__truediv__()).
#   Данные методы должны применяться только к клеткам и выполнять увеличение, уменьшение, 
#   умножение и обычное (не целочисленное) деление клеток, соответственно. 
#   В методе деления должно осуществляться округление значения до целого числа.
#   Сложение. Объединение двух клеток. 
#   При этом число ячеек общей клетки должно равняться сумме ячеек исходных двух клеток.
#   Вычитание. Участвуют две клетки. 
#   Операцию необходимо выполнять только если разность количества ячеек двух клеток больше нуля,
#   иначе выводить соответствующее сообщение.
#                           (????? может биолога привлечь?? я не понимаю,как это работает--
#                           одна клетка выбивает ядра из другой?????)
#   Умножение. Создается общая клетка из двух. 
#   Число ячеек общей клетки определяется как произведение количества ячеек этих двух клеток.
#                            (Аааа! вон оно что, вопрос снимается =))))))))
#   Деление. Создается общая клетка из двух. 
#   Число ячеек общей клетки определяется как целочисленное деление количества ячеек этих двух клеток.
#   В классе необходимо реализовать метод make_order(), 
#   принимающий экземпляр класса и количество ячеек в ряду. 
#   Данный метод позволяет организовать ячейки по рядам.
#   Метод должен возвращать строку вида *****\n***n**\n*****..., где количество ячеек между \n
#   равно переданному аргументу. 
#   Если ячеек на формирование ряда не хватает, то в последний ряд записываются все оставшиеся.
#   Например, количество ячеек клетки равняется 12, количество ячеек в ряду — 5. 
#   Тогда метод make_order() вернет строку: *****\n*****\n**.
#   Или, количество ячеек клетки равняется 15, количество ячеек в ряду — 5. 
#   Тогда метод make_order() вернет строку: *****\n*****\n*****.
# 

class OrganicCell:
    def __init__(self, num_cores):
        self.num_cores = num_cores

    def __add__(self, other):
        return OrganicCell(self.num_cores + other.num_cores)

    def __sub__(self, other):
        if other.num_cores > self.num_cores:
            print('разность количества ячеек двух клеток меньше нуля')
            return OrganicCell(0)
        return OrganicCell(self.num_cores - other.num_cores)

    def __mul__(self, other):
        return OrganicCell(self.num_cores * other.num_cores)

    def __truediv__(self, other):
        return OrganicCell(self.num_cores // other.num_cores)

    def make_order(self, n):
        return ('*' * n + '\n') * (self.num_cores // n) + '*' * (self.num_cores % n)


A = OrganicCell(90)
B = OrganicCell(10)
print(f'A + B :\n{(A + B).make_order(25)} ')
print(f'(A - B) / B :\n{((A - B) / B).make_order(4)} ')
print(f'A * B :\n{(A * B).make_order(100)} ')


